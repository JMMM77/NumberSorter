@using NumberSorter.Common.Models

@model List<SortedNumbersViewModel>;

@{
    ViewData["Title"] = "All Sorted Numbers";
}

<h1>@ViewData["Title"]</h1>

<div class="row mb-2">
    <div class="col-md-6 mb-2">
        <a asp-action="Create" class="btn btn-sm btn-primary">Add New List</a>
    </div>
    <div class="col-md-6 text-end mb-2">
        <form asp-action="ExportToJson" asp-controller="SortedNumbers" method="post">
            <button type="submit" value="ExportToJson" class="btn btn-sm btn-primary">Export to JSON</button>
        </form>
    </div>
    

    
</div>

<table class="table table-striped">
    <tr>
        <th>Initial Values</th>
        <th>Sorted Values</th>
        <th>Sort Time</th>
        <th>Ordered By</th>
        <th>Actions</th>
    </tr>
    <tbody>
        @foreach (SortedNumbersViewModel sortedNumber in Model)
        {
            <tr>
                <td>@sortedNumber.InitialValues</td>
                <td>@sortedNumber.SortedValuesString</td>
                <td>@sortedNumber.SortTime</td>
                <td>@(sortedNumber.IsAscending ? "Ascending" : "Descending")</td>
                <td>
                    <a asp-action="Details" asp-route-id="@sortedNumber.Id" class="btn btn-sm btn-primary">Details</a>
                    <a asp-action="Delete" asp-route-id="@sortedNumber.Id" class="btn btn-sm btn-danger">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>